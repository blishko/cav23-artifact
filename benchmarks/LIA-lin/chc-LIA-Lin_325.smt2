; ./seahorn/./sv_comp_flat_small/loops/sum01_true-unreach-call_true-termination.c.flat_000.smt2
(set-logic HORN)

(declare-fun |main_1| ( Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (v_3 Int) ) 
    (=>
      (and
        (and true (= 0 v_3))
      )
      (main_1 v_3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Int) (N Int) (v_14 Int) (v_15 Int) ) 
    (=>
      (and
        (main_1 v_14 D E F)
        (and (= 0 v_14)
     (or (= B N) (not I) (not L))
     (or (= A M) (not I) (not L))
     (or (= N 1) (not I) (not L))
     (or (= M 0) (not I) (not L))
     (or (not C) (not G) (not J))
     (or (not K) (and I L))
     (or (not I) (and G J))
     (= K true)
     (not (= (<= 1 H) C))
     (= 1 v_15))
      )
      (main_1 v_15 H A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Bool) (K Int) (L Bool) (M Bool) (N Int) (O Int) (P Bool) (Q Bool) (v_17 Int) (v_18 Int) ) 
    (=>
      (and
        (main_1 v_17 G H I)
        (and (= 0 v_17)
     (or (= N 0) (not J) (not M))
     (or (= O N) (not J) (not M))
     (or F (not J) (not M))
     (or (not P) (and L Q))
     (or (not L) (= A (* 2 K)))
     (or (not L) (= D (or B C)))
     (or (not L) (not (= D E)))
     (or (not L) (= C (= O 0)))
     (or (not L) (= B (= O A)))
     (or (not L) (and J M))
     (or (not L) E)
     (= P true)
     (not (= (<= 1 K) F))
     (= 2 v_18))
      )
      (main_1 v_18 K H I)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Bool) (v_13 Int) (v_14 Int) ) 
    (=>
      (and
        (main_1 v_13 D E F)
        (and (= 1 v_13)
     (= K (+ 1 F))
     (not (= (<= D F) A))
     (or (not M) (not G) (= I K))
     (or (not M) (not G) (= H J))
     (or (not M) (not G) (= B H))
     (or (not M) (not G) (= C I))
     (or A (not M) (not G))
     (or (not L) (and M G))
     (= L true)
     (= J (+ 2 E))
     (= 1 v_14))
      )
      (main_1 v_14 D B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Bool) (M Int) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Bool) (T Bool) (U Int) (V Bool) (v_22 Int) (v_23 Int) ) 
    (=>
      (and
        (main_1 v_22 H I J)
        (and (= 1 v_22)
     (= Q (+ 2 I))
     (not (= (<= H J) F))
     (or (= N M) (not S) (not V))
     (or (= M G) (not S) (not V))
     (or (not K) (= G U) (not T))
     (or (not K) (= U Q) (not T))
     (or (not K) (not F) (not T))
     (or (not L) (= A (* 2 H)))
     (or (not L) (= D (or B C)))
     (or (not L) (not (= D E)))
     (or (not L) (= C (= N 0)))
     (or (not L) (= B (= N A)))
     (or (not L) (and S V))
     (or E (not L))
     (or (not S) (and K T))
     (or (not O) (and P L))
     (= O true)
     (= R (+ 1 J))
     (= 2 v_23))
      )
      (main_1 v_23 H I J)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (v_3 Int) ) 
    (=>
      (and
        (main_1 v_3 A B C)
        (= 2 v_3)
      )
      false
    )
  )
)

(check-sat)
(exit)
