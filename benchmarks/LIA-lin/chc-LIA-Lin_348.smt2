; ./seahorn/./sv_comp_flat_small/product-lines/minepump_spec4_product37_false-unreach-call.cil.c.flat_000.smt2
(set-logic HORN)

(declare-fun |main_1| ( Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (v_3 Int) ) 
    (=>
      (and
        (and true (= 0 v_3))
      )
      (main_1 v_3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Int) (v_12 Int) (v_13 Int) ) 
    (=>
      (and
        (main_1 v_12 B C D)
        (and (= 0 v_12)
     (or (= H 0) (not E) (not G))
     (or (= A I) (not E) (not G))
     (or (= L J) (not E) (not G))
     (or (= K H) (not E) (not G))
     (or (= J 0) (not E) (not G))
     (or (not F) (and E G))
     (= F true)
     (or (= I 1) (not E) (not G))
     (= 1 v_13))
      )
      (main_1 v_13 K A L)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Int) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Int) (O Bool) (P Bool) (Q Int) (R Bool) (S Bool) (T Bool) (U Int) (V Int) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Bool) (K1 Int) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Int) (P1 Int) (Q1 Int) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Int) (X1 Bool) (Y1 Bool) (Z1 Bool) (A2 Bool) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Int) (F2 Int) (G2 Int) (H2 Bool) (I2 Bool) (J2 Bool) (K2 Bool) (L2 Int) (M2 Int) (N2 Int) (O2 Bool) (P2 Bool) (v_68 Int) (v_69 Int) ) 
    (=>
      (and
        (main_1 v_68 Y Z A1)
        (let ((a!1 (or (not B2) (not (= (= W1 0) A))))
      (a!2 (or (not Z1) (not (= (<= 2 W1) D))))
      (a!3 (or (not T1) (not (= (= A1 0) I))))
      (a!4 (or (not T1) (not (= (<= H1 0) J)))))
  (and (= 1 v_68)
       (not (= (<= 2 Z) S))
       (= W (= V 0))
       (= T (and R S))
       (= H1 (+ U Z))
       (= U (ite T 1 0))
       (or (not H2) (and K2 X1) (and J2 Z1) (and I2 B2))
       (or (= G1 E1) (not H2) (not P2))
       (or (= F1 C1) (not H2) (not P2))
       (or (= E1 H) (not H2) (not P2))
       (or (= D1 W1) (not H2) (not P2))
       (or (= C1 Q1) (not H2) (not P2))
       (or (= X D1) (not H2) (not P2))
       (or (and Z1 C2) (and X1 D2) (not B2))
       (or (= G2 E2) (not Z1) (not C2))
       (or (= E2 1) (not Z1) (not C2))
       (or (= G2 F2) (not X1) (not D2))
       (or (= F2 A1) (not X1) (not D2))
       (or (and R1 U1) (and L1 V1) (not T1))
       (or (and I1 M1) (and B1 N1) (not L1))
       (or (= Q1 O1) (not I1) (not M1))
       (or (= O1 K1) (not I1) (not M1))
       (or (= Q1 P1) (not B1) (not N1))
       (or (= P1 Y) (not B1) (not N1))
       (or W (not B1) (not N1))
       (or (not W) (not J1) (not B1))
       (or (not O) (not L1) (not V1))
       (or O (not L1) (not S1))
       (or M (not T1) (not A2))
       (or (not M) (not T1) (not Y1))
       (or G (not X1) (not D2))
       (or (not F) (not Z1) (not C2))
       (or (not K2) (not X1) (= H N2))
       (or (not K2) (not X1) (= N2 0))
       (or (not G) (not K2) (not X1))
       (or (not J2) (not Z1) (= H M2))
       (or (not J2) (not Z1) (= M2 0))
       (or F (not J2) (not Z1))
       (or (not I2) (not B2) (= H L2))
       (or (not I2) (not B2) (= L2 G2))
       (or C (not B2) (not I2))
       (or (not O2) (and H2 P2))
       a!1
       (or (not B2) (= C (or A B)))
       (or (not B2) (= B (= G2 0)))
       a!2
       (or (not Z1) (not (= E F)))
       (or (not Z1) (not (= D E)))
       (or (not Z1) (and T1 A2))
       (or (not X1) (= G (= Q1 0)))
       (or (not X1) (and T1 Y1))
       a!3
       a!4
       (or (not T1) (= M (= A1 0)))
       (or (not T1) (= K (and I J)))
       (or (not T1) (= W1 (+ L H1)))
       (or (not T1) (= L (ite K (- 1) 0)))
       (or (not R1) (and L1 S1))
       (or (not L1) (= O (= N 0)))
       (or (not I1) (= P (= Y 0)))
       (or (not I1) (= K1 (ite P 1 0)))
       (or (not I1) (and B1 J1))
       (= O2 true)
       (not (= (= Q 0) R))
       (= 1 v_69)))
      )
      (main_1 v_69 F1 X G1)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Int) (L Bool) (M Int) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Int) (X Int) (Y Int) (Z Bool) (A1 Int) (B1 Bool) (C1 Bool) (D1 Int) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Int) (I1 Int) (J1 Int) (K1 Bool) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Bool) (P1 Int) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Int) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Bool) (v_54 Int) (v_55 Int) ) 
    (=>
      (and
        (main_1 v_54 W X Y)
        (let ((a!1 (or (not S1) (not (= (<= 2 P1) D))))
      (a!2 (or (not M1) (not (= (= Y 0) H))))
      (a!3 (or (not M1) (not (= (<= A1 0) I))))
      (a!4 (or (not U1) (not (= (= P1 0) A)))))
  (and (= 1 v_54)
       (not (= (<= 2 X) R))
       (= S (and Q R))
       (= V (= U 0))
       (= A1 (+ T X))
       (= T (ite S 1 0))
       (or (and K1 N1) (and E1 O1) (not M1))
       (or (not L) (not M1) (not R1))
       (or L (not T1) (not M1))
       (or (not F1) (not B1) (= J1 H1))
       (or (not F1) (not B1) (= H1 D1))
       (or (and Z G1) (not E1) (and F1 B1))
       (or (= J1 I1) (not Z) (not G1))
       (or (= I1 W) (not Z) (not G1))
       (or (not V) (not Z) (not C1))
       (or V (not Z) (not G1))
       (or (not N) (not O1) (not E1))
       (or N (not L1) (not E1))
       (or (not W1) (not Q1) (= Y1 Y))
       (or (not W1) (not Q1) (= Z1 Y1))
       (or G (not W1) (not Q1))
       (or (not V1) (not S1) (= X1 1))
       (or (not V1) (not S1) (= Z1 X1))
       (or (not F) (not V1) (not S1))
       (or (not U1) (and W1 Q1) (and V1 S1))
       (or (not C) (not U1) (not B2))
       a!1
       (or (not S1) (not (= E F)))
       (or (not S1) (not (= D E)))
       (or (not S1) (and M1 T1))
       (or (not Q1) (= G (= J1 0)))
       (or (not Q1) (and M1 R1))
       (or (not B1) (= O (= W 0)))
       (or (not B1) (= D1 (ite O 1 0)))
       (or (not B1) (and Z C1))
       (or (not A2) (and U1 B2))
       a!2
       a!3
       (or (not M1) (= L (= Y 0)))
       (or (not M1) (= J (and I H)))
       (or (not M1) (= P1 (+ K A1)))
       (or (not M1) (= K (ite J (- 1) 0)))
       (or (not K1) (and E1 L1))
       (or (not E1) (= N (= M 0)))
       a!4
       (or (not U1) (= C (or A B)))
       (or (not U1) (= B (= Z1 0)))
       (= A2 true)
       (not (= (= P 0) Q))
       (= 2 v_55)))
      )
      (main_1 v_55 W X Y)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (v_3 Int) ) 
    (=>
      (and
        (main_1 v_3 A B C)
        (= 2 v_3)
      )
      false
    )
  )
)

(check-sat)
(exit)
